// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bangzon.Migrations
{
    [DbContext(typeof(BangzonDbContext))]
    [Migration("20230829022125_linking")]
    partial class linking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bangzon.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Shoes"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Tops"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Bottoms"
                        });
                });

            modelBuilder.Entity("Bangzon.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderStatusId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderStatusId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            OrderStatusId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Bangzon.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Status = "Completed"
                        },
                        new
                        {
                            Id = 2,
                            Status = "Shipped"
                        },
                        new
                        {
                            Id = 3,
                            Status = "Ordered"
                        });
                });

            modelBuilder.Entity("Bangzon.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PaymentTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserPaymentTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserPaymentTypeId");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PaymentTypeName = "Credit Card"
                        },
                        new
                        {
                            Id = 2,
                            PaymentTypeName = "Gift Card"
                        },
                        new
                        {
                            Id = 3,
                            PaymentTypeName = "PayPal"
                        });
                });

            modelBuilder.Entity("Bangzon.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ProductDescription = "Pair of shoes",
                            ProductName = "Shoes",
                            ProductPrice = 11.99m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            ProductDescription = "White Polo",
                            ProductName = "Shirt",
                            ProductPrice = 10.49m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            ProductDescription = "Black Jeans",
                            ProductName = "Pants",
                            ProductPrice = 5.79m,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Bangzon.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSeller")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserPaymentTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserPaymentTypeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsSeller = true,
                            UserName = "Jack Smith",
                            uid = "4d56asd6"
                        },
                        new
                        {
                            Id = 2,
                            IsSeller = false,
                            UserName = "Chris Lee",
                            uid = "4d56asd6sareq"
                        },
                        new
                        {
                            Id = 3,
                            IsSeller = false,
                            UserName = "Steve Wilson",
                            uid = "4d56asd6das"
                        },
                        new
                        {
                            Id = 4,
                            IsSeller = true,
                            UserName = "Mike Larry",
                            uid = "sa02asd"
                        });
                });

            modelBuilder.Entity("Bangzon.Models.UserPaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UserPaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PaymentTypeId = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            PaymentTypeId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            PaymentTypeId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            PaymentTypeId = 3,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");

                    b.HasData(
                        new
                        {
                            OrdersId = 1,
                            ProductsId = 1
                        },
                        new
                        {
                            OrdersId = 1,
                            ProductsId = 2
                        },
                        new
                        {
                            OrdersId = 1,
                            ProductsId = 3
                        });
                });

            modelBuilder.Entity("Bangzon.Models.PaymentType", b =>
                {
                    b.HasOne("Bangzon.Models.UserPaymentType", null)
                        .WithMany("PaymentTypes")
                        .HasForeignKey("UserPaymentTypeId");
                });

            modelBuilder.Entity("Bangzon.Models.User", b =>
                {
                    b.HasOne("Bangzon.Models.UserPaymentType", null)
                        .WithMany("Users")
                        .HasForeignKey("UserPaymentTypeId");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Bangzon.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangzon.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bangzon.Models.UserPaymentType", b =>
                {
                    b.Navigation("PaymentTypes");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
